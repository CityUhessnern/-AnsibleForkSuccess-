---
- name: GitHub Release and Git Tagging
  hosts: localhost
  vars:
  - destdir: ~/Desktop/CS504-Project-HessnerNicole/Submission1/CS504-IP01-AnsibleTest

  vars_prompt:
  - name: "commitMessage"
    prompt: Please input message to include with commit.
    private: no

  - name: "workingBranch"
    prompt: Please provide local working branch name.
    private: no

  - name: "pushBranch"
    prompt: Please provide branch name to push to.
    private: no

  - name: "version"
    prompt: Please provide a version tag.
    private: no

  - name: "tagMessage"
    prompt: Please provide a message for your tag.
    private: no

  - name: "releaseTitle"
    prompt: "Please provide a title for your release."
    private: no

  - name: "releaseNotes"
    prompt: "Please provide notes for your release."
    private: no

  tasks:
  - name: Git - Branch
    shell: git checkout -b "{{workingBranch}}"
    args:
      chdir: "{{destdir}}"
    register: gitcheckout
    ignore_errors: yes
#    when: git.msg is defined
#  - debug:
#      var: gitcheckout.stdout
 
  - name: Git - Tag
    shell:
      git tag -a "{{version}}" -m "'{{tagMessage}}'"
    args:
      chdir: "{{destdir}}/{{version}}"
    register: gittag
    ignore_errors: yes
#    when: git.msg is defined
# - debug:
#      var: gittag.cmd

  - name: Git - Adding
    shell:
      "git add --all"
    args:
      chdir: "{{destdir}}"
    register: gitadd
    ignore_errors: yes
#    when: git.msg is defined
# - debug:
#     var: gitadd.cmd

  - name: Git - Commiting
    shell: 
      git commit -m '{{commitMessage}}'
    args:
      chdir: "{{destdir}}"
    register: gitcommit
    ignore_errors: true
#    when: git.msg is defined
#  - debug:
#      var: gitcommit.stdout   

  - name: Git - Push Version
    shell: git push origin '{{version}}'
    args:
      chdir: "{{destdir}}"
    register: gitpushver
    ignore_errors: yes
#    when: git.msg is defined
#  - debug:
#      var: gitpushver.stdout
  
  - name: Git - Push
    shell: 
      git push origin '{{pushBranch}}'
    args:
      chdir: "{{destdir}}"
    register: gitpush
    ignore_errors: yes
#    when: git.msg is defined
#  - debug:
#      var: gitpush.stdout

  - name: GitHub - Release
    shell:
      gh release create '{{version}}' -t "'{{releaseTitle}}'" --notes "'{{releaseNotes}}'"
    args:
      chdir: "{{destdir}}"
    register: ghrelease
    
...

